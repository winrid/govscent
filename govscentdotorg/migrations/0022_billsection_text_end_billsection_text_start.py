# Generated by Django 4.1.7 on 2023-05-18 04:52

from django.db import migrations, models


def find_sublist_index(source, sublist) -> int:
    sub_len = len(sublist)
    for idx in range(len(source) - len(sublist) + 1):
        sub_idx = 0
        while sub_idx < sub_len and sublist[sub_idx] == source[idx + sub_idx]:
            sub_idx += 1
        if sub_idx == sub_len:
            return idx
    return -1


def migrate_sections(apps, schema_editor):
    # noinspection PyPep8Naming
    Bill = apps.get_model("govscentdotorg", "Bill")
    # noinspection PyPep8Naming
    BillSection = apps.get_model("govscentdotorg", "BillSection")
    sections_to_fix = BillSection.objects.filter(text_start__isnull=True).only('pk').all()
    count = 0
    target_count = len(sections_to_fix)
    print(f'Will fix {target_count} sections.')
    for section in sections_to_fix:
        print(f'Fixing {section.id}')
        bill = Bill.objects.filter(bill_sections__in=[section]).only('text').first()
        if bill is None:
            print(f'WARNING bill not found for section {section.id}')
            continue
        if bill.text is None:
            print(f'WARNING bill {bill.id} text not found for section {section.id}')
            continue
        bill_tokens = bill.text.split(" ")
        section_tokens = section.text.split(" ")
        tokens_start = find_sublist_index(bill_tokens, section_tokens)
        if tokens_start == -1:
            print(f'WARNING did not find section {section.id} in bill {bill.id} text?')
            continue
        section.text_start = tokens_start
        section.text_end = tokens_start + len(section_tokens)
        section.save()
        count = count + 1
        # We will remove section text in a 2nd migration after data confirmed.
        print(f'Fixed section {count} out of {target_count}')


class Migration(migrations.Migration):
    dependencies = [
        ('govscentdotorg', '0021_billtopic_search_vector_alter_bill_bill_sections_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='billsection',
            name='text_end',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='billsection',
            name='text_start',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.RunPython(
            migrate_sections, reverse_code=migrations.RunPython.noop
        )
    ]
